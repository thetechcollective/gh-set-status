#!/usr/bin/env bash

USAGE=$(cat <<'EOF'
  gh set-status {state} {description}
  gh set-status {state} {description} {context}
  gh set-status {state} {description} {context} {target_url}

GitHub CLI extension that sets a commit status using the GitHub CLI. 

NOTE:
  Specifically designed to run in a GitHub Actions workflow context.
  Environment variables $GITHUB_REPOSITORY, $GITHUB_SHA, $GITHUB_ACTION, 
  $GITHUB_RUN_ID and $GITHUB_SERVER_URL must be defined manually when 
  running/testing outside of GitHub Actions.

Arguments:
  state        The status state, valid values are [success|error|failure|pending]
               (Required as first argument)
  description  A description of the status (Required as second argument)
  context      The status context (Optional third argument). if not given will be 
               set to the value of $GITHUB_ACTION. The keyword 'default' is allowed 
               too.
  target_url   The target URL for the status
               Optional fourth argument. if not given will be set to the the url
               value to the current workflow run. The keyword 'default' is allowed
               too.

When used from a GitHub Workflow...
Assuming 

  runs-on: ubuntu-latest

Install:

Install it as a GitHub CLI extension:
gh extension install thetechcollective/gh-set-status

Create a step in your GitHub Actions workflow to install the `gh-set-status` 
extension:

    - name: Install gh dependencies
      env:
        GH_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      run: |
        gh extension install thetechcollective/gh-set-status --pin stable

It requires statuses:write permissions - like this:

permissions:
  statuses: write

Examples:

gh set-status pending "Spelling checks in progress"
gh set-status pending "Spelling checks in progress" linting
gh set-status pending "Spelling checks in progress" linting https://example.com
gh set-status pending "Spelling checks in progress" default default

See plenty of more examples in the workflows in https://github.com/lakruzz/workflows

EOF
)

STATE="$1"
DESCRIPTION="$2"
CONTEXT="$3"
TARGET_URL="$4"

# Die if any of the required are missing
if [[ -z "$STATE" || -z "$DESCRIPTION" ]]; then
  echo "❌ Required arguments are not given."
  echo 
  echo "Usage:"
  echo "$USAGE"
  exit 1
fi

# Die if any of the required environment settings are missing
if [[ -z "$GITHUB_REPOSITORY" || -z "$GITHUB_SHA" || -z "$GITHUB_ACTION" || -z "$GITHUB_RUN_ID" || -z "$GITHUB_SERVER_URL" ]]; then
  echo "❌ Not running in a GitHub Actions workflow context."
  echo "Environment variables GITHUB_REPOSITORY, GITHUB_SHA, GITHUB_ACTION, GITHUB_RUN_ID, and GITHUB_SERVER_URL are not set."
  echo "Usage:"
  echo
  echo "$USAGE"
  exit 1
fi

# Set the default values if 'auto' is passed
if [[ -z "$CONTEXT" || "$CONTEXT" == "default" ]]; then
  CONTEXT="$GITHUB_ACTION"
fi
if [[ -z "$TARGET_URL" ||  "$TARGET_URL" == "default" ]]; then
  TARGET_URL="$GITHUB_SERVER_URL/$GITHUB_REPOSITORY/actions/runs/$GITHUB_RUN_ID"
fi 

echo "####### Setting the commit status ########"
echo "  state:       '$STATE'"
echo "  description: '$DESCRIPTION'"
echo "  context:     '$CONTEXT'"
echo "  url:         '$TARGET_URL'"

set -x
gh api \
  --method POST \
  -H "Accept: application/vnd.github+json" \
  -H "X-GitHub-Api-Version: 2022-11-28" \
  /repos/$GITHUB_REPOSITORY/statuses/$GITHUB_SHA \
  -f "state=$STATE" \
  -f "target_url=$TARGET_URL" \
  -f "description=$DESCRIPTION" \
  -f "context=$CONTEXT"
